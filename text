package com.map;

import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;

import com.facebook.react.bridge.NativeModule;
import com.facebook.react.bridge.ReactContext;
import java.util.Map;
import java.util.HashMap;

import com.application.isradeleon.notify.Notify;

public class EncryptionModule extends ReactContextBaseJavaModule {
    private ReactApplicationContext mContext;
    public  EncryptionModule(ReactApplicationContext reactContext){
        super(reactContext);
        mContext=reactContext;
    }
    @Override
    public String getName() {
        return "Encryptor";  // Name of the Native Modules.
    }

    /**
    * @param plainText Text to be encrypted(from JS layer)
    */

    @ReactMethod
    public void encrypt(String plainText, Promise promise) {
        // try {
        // // Add your encryption logic here 
        // // (can use any JAVA encryption library or use default)
        // String encryptedText = plainText + "This is encrypted text";
        // promise.resolve(encryptedText); // return encryptedText
        // } catch (Exception e) {
        // promise.reject("ENCRYPTION_FAILED", "Encryption Failed");
        // }

        Notify.build( mContext.getApplicationContext())

        /*
         * Set notification title and content
         * */
        .setTitle("Jill Zhao")
        .setContent("Hi! So I meet you today?")

        /*
         * Set small icon from drawable resource
         * */
        // .setSmallIcon(R.drawable.ic_notifications_none_white_24dp)
        // .setColor(R.color.colorPrimary)

        /*
         * Set notification large icon from drawable resource or URL
         * (make sure you added INTERNET permission to AndroidManifest.xml)
         * */
        .setLargeIcon("https://images.pexels.com/photos/139829/pexels-photo-139829.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=150&w=440")

        /*
         * Circular large icon
         * */
        .largeCircularIcon()

        /*
         * Add a picture from drawable resource or URL
         * (INTERNET permission needs to be added to AndroidManifest.xml)
         * */
        .setPicture("https://images.pexels.com/photos/1058683/pexels-photo-1058683.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940")

        .show(); // Show notification
    }

    /**
    * @param encryptedText Text to be decrypted(from JS layer)
    */
    @ReactMethod
    public void decrypt(String encryptedText, Promise promise) {
        try {
        // Add your decryption logic here 
        // (can use any JAVA decryption library or use default)
        String decryptedText = encryptedText + "This is decrypted text";
        promise.resolve(decryptedText); // return decryptedText
        } catch (Exception e) {
        promise.reject("DECRYPTION_FAILED", "Decryption Failed");
        }
    }

}